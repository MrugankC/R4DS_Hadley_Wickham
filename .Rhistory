breaks = c(000,600,1000,1500,2000,2400),
labels = c("Early Morning","Morning","Noon","Evening","Night")),  # create sched dep part of day based on time
wday = wday(date,label = TRUE)                           # create weekday
) %>%
dplyr::filter(wday == "Sun") %>%                                # filter sunday data
group_by(sched_dep_part_of_day) %>%                             # group by scheduled departure part of day
summarize(number_of_filghts = n(),                              # number of flights scheduled in evening
cum_distance = sum(distance))                         # sum of distances of all flights travelled
# As we can see from the above data the number of scheduled flights on Sundays
# and cumulative distance travelled is greater in Evening between 3pm and 8 pm
# Q.8 ---------------------------------------------------------------------
# It’s a little frustrating that Sunday and Saturday are on separate ends of the plot.
# Write a small function to set the levels of the factor so that the week starts on Monday.
mod3 = MASS::rlm(formula = n ~ wday * term, data = daily)
daily %>%
add_residuals(model = mod3,var = "resid") %>%
ggplot(mapping = aes(date,resid)) +
geom_line() +
geom_hline(yintercept = 0, colour = "white", size = 2)
mod3 = MASS::rlm(formula = n ~ wday * term, data = daily)
daily %>%
add_residuals(model = mod3,var = "resid") %>%
ggplot(mapping = aes(date,resid)) +
geom_line() +
geom_hline(yintercept = 0, colour = "white", size = 2)
mod
daily %>%
add_predictions(model = mod,var = "pred_only_wday")
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily
#------------------------  Setting up system locale ------------------------
Sys.setlocale("LC_CTYPE", locale="Japanese")
Sys.setlocale("LC_COLLATE", locale="Japanese")
Sys.setlocale("LC_MONETARY", locale="Japanese")
Sys.setlocale("LC_NUMERIC", locale="C")
Sys.setlocale("LC_TIME", locale="Japanese")
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n))
#------------------------  Setting up system locale ------------------------
Sys.setlocale("LC_CTYPE", locale="Japanese")
Sys.setlocale("LC_COLLATE", locale="Japanese")
Sys.setlocale("LC_MONETARY", locale="Japanese")
Sys.setlocale("LC_NUMERIC", locale="C")
Sys.setlocale("LC_TIME", locale="Japanese")
flights
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
daily
mod = lm(formula = n ~ wday,data = daily)
mod
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
daily
class(daily$wday)
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_point()
wday
daily %>%
add_predictions(model = mod,var = "pred_only_wday")
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE),
wday = switch(wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun"))
get_eng_wday = function(jap_wday){
en_wday = switch(wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
return(en_wday)
}
get_eng_wday = function(jap_wday){
en_wday = switch(wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
return(en_wday)
}
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = get_end_wday(wday(x = date,label = TRUE)))
get_eng_wday = function(jap_wday){
en_wday = switch(wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
return(en_wday)
}
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE),
wday = get_eng_wday(wday)
)
get_eng_wday(daily$wday)
en_wday = switch(daily$wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
switch(wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
switch("月",
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
get_eng_wday = function(jap_wday){
switch(jap_wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
return(en_wday)
}
get_eng_wday(daily$wday)
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE),
wday = get_eng_wday(wday))
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
get_eng_wday(daily$wday[1])
daily$wday[1]
get_eng_wday(jap_wday = as.vector(daily$wday[1]))
get_eng_wday = function(jap_wday){
switch(jap_wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
}
get_eng_wday(jap_wday = as.vector(daily$wday[1]))
get_eng_wday = function(jap_wday){
eng_wday = switch(jap_wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
return(eng_wday)
}
get_eng_wday(jap_wday = as.vector(daily$wday[1]))
as.vector(daily$wday[1])
jap_wday = as.vector(daily$wday[1])
jap_wday
eng_wday = switch(jap_wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
eng_wday
switch(jap_wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
jap_wday
switch(jap_wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
switch("月",
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
jap_wday
switch(jap_wday,
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
switch(c("月","火"),
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
jap_wday
jap_wday
eval(jap_wday)
switch(eval(jap_wday),
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
get(jap_wday)
eval(jap_wday)
switch(eval(jap_wday),
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
eng_wday = switch(eval(jap_wday),
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
eng_wday
jap_wday
eval(jap_wday)
eval(jap_wday),
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun"
eval(jap_wday),
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun"
eval(jap_wday)
switch(eval(jap_wday),
"月" = "Mon",
"火" = "Tue",
"水" = "Wed",
"木" = "Thu",
"金" = "Fri",
"土" = "Sat",
"日" = "Sun")
jap_wday
jap_wdays = c("月","火","水","木","金","土","日")
eng_wdays = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")
which(jap_wdays == jap_wday)
eng_wdays[which(jap_wdays == jap_wday)]
get_eng_wday = function(jap_wday){
jap_wdays = c("月","火","水","木","金","土","日")
eng_wdays = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")
eng_wday = eng_wdays[which(jap_wdays == jap_wday)]
return(eng_wday)
}
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = get_eng_wday(wday(x = date,label = TRUE)))
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE) %>%
wday = get_eng_wday(as.charater(wday)))
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE),
wday = get_eng_wday(as.charater(wday)))
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE),
wday = get_eng_wday(as.character(wday)))
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
daily
get_eng_wday = function(jap_wday){
jap_wdays = c("月","火","水","木","金","土","日")
eng_wdays = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")
eng_wday = eng_wdays[which(jap_wdays == jap_wday)]
return(eng_wday)
}
get_eng_wday("月")
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE),
wday = as.vector(wday))
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE),
wday = as.vector(wday))
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n())
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
get_eng_wday(jap_wday = as.vector(daily$wday[1]))
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
library(tidyverse)
library(modelr)
options(na.action = na.warn)
library(nycflights13)
library(lubridate)
library(splines)
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = as.vector(wday(x = date,label = TRUE)))
daily
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = as.vector(wday), y = n)) +
geom_boxplot()
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = as.vector(wday), y = n))
daily %>%
add_predictions(model = mod,var = "pred_only_wday")
daily
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = as.vector(wday(x = date,label = TRUE)))
# creating the model : number of flights is dependent on weekday
mod = lm(formula = n ~ wday,data = daily)
mod
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = as.vector(wday), y = n)) +
geom_boxplot()
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily = flights %>%
mutate(date = make_date(year, month, day)) %>%
group_by(date) %>%
summarize(n = n()) %>%
mutate(wday = wday(x = date,label = TRUE))
dependent on weekday
mod = lm(formula = n ~ wday,data = daily)
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
daily
class(daily$wday)
daily$wday
levels(daily$wday)
daily$wday = factor(x = daily$wday,levels = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"))
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
new_wday_order = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
mutate(daily$wday = factor(x = daily$wday,levels = new_wday_order)) %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
new_wday_order = c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
mutate(wday = factor(x = wday,levels = new_wday_order))
daily %>%
add_predictions(model = mod,var = "pred_only_wday") %>%
mutate(wday = factor(x = wday,levels = new_wday_order)) %>%
ggplot(mapping = aes(x = wday, y = n)) +
geom_boxplot()
